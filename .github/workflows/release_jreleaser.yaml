name: release with jreleaser

on:
  workflow_dispatch:

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # @v4.1.7
        with:
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@2dfa2011c5b2a0f1489bf9e433881c92c1631f88 # @v4.3.0
        with:
          java-version: 21
          distribution: 'zulu'
          cache: gradle

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@d156388eb19639ec20ade50009f3d199ce1e2808 # @v4.1.0
      - name: Build with Gradle
        run: ./gradlew shadowJar

      - name: Run JReleaser
        uses: jreleaser/release-action@f69e545b05f149483cecb2fb81866247992694b8 # @v2.4.2
        env:
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: JReleaser release output
        if: always()
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # @v4.4.0
        with:
          name: jreleaser-release
          path: |
            out/jreleaser/trace.log
            out/jreleaser/output.properties

      # Docker
      - name: Set up QEMU
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # @v3.2.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # @v3.6.1

      - name: Login to Docker Hub
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # @v3.3.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: docker_meta
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # @v5.5.1
        with:
          images: codepitbull/hello
          tags: type=raw,value=latest

      - name: Build and push
        id: build-and-push
        uses: docker/build-push-action@5cd11c3a4ced054e52742c5fd54dca954e0edd85 # @v6.7.0
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}

      - name: Install Cosign
        uses: sigstore/cosign-installer@4959ce089c160fddf62f7b42464195ba1a56d382 # @v3.6.0

      - name: Sign image with a key
        run: |
          cosign sign --yes --key env://COSIGN_PRIVATE_KEY "${TAGS}@${DIGEST}"
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_KEY_PASSWORD }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}